{"version":3,"sources":["node_modules/browser-pack/_prelude.js","config.js","background.js","node_modules/component-emitter/index.js","node_modules/fieldbook-promise/constants.js","node_modules/fieldbook-promise/index.js","node_modules/punycode/punycode.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/reduce-component/index.js","node_modules/superagent-promise/index.js","node_modules/superagent/lib/client.js","node_modules/url/url.js","node_modules/url/util.js","src/js/background.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","fieldbook","username","password","book",2,"Emitter","obj","mixin","key","prototype","on","addEventListener","event","fn","this","_callbacks","push","once","self","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","slice","len","listeners","hasListeners",3,"errors","NO_CONFIG_OBJECT","NO_CONFIG_USER","NO_CONFIG_PASSWORD","NO_CONFIG_BOOK",4,"config","execute","req","set","auth","options","user","end","then","response","body","errBody","console","log","Promise","reject","error","buildApi","path","Array","unshift","join","url","resolve","request","constants","conf","getSheets","api","get","getSheet","sheetId","getRecord","recordId","addRecord","data","post","send","updateRecord","patch","deleteRecord","del","./constants","superagent","superagent-promise",5,"global","root","type","RangeError","map","array","result","mapDomain","string","parts","split","replace","regexSeparators","labels","encoded","ucs2decode","value","extra","output","counter","charCodeAt","ucs2encode","stringFromCharCode","basicToDigit","codePoint","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","floor","damp","baseMinusTMin","tMax","skew","decode","input","out","basic","j","index","oldi","w","baseMinusT","inputLength","initialN","bias","initialBias","lastIndexOf","delimiter","maxInt","tMin","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","test","toLowerCase","toASCII","regexNonASCII","freeExports","nodeType","freeModule","freeGlobal","window","punycode","overflow","not-basic","invalid-input","Math","String","fromCharCode","version","ucs2","define","amd","hasOwnProperty",6,"prop","Object","qs","sep","eq","regexp","maxKeys","kstr","vstr","v","x","idx","indexOf","substr","decodeURIComponent","isArray","xs","toString",7,"res","stringifyPrimitive","isFinite","name","undefined","objectKeys","ks","encodeURIComponent","keys",8,"parse","stringify","./decode","./encode",9,"arr","initial","curr",10,"wrap","PromiseRequest","Request","create","_end","accept","err","method","head","query","put",11,"noop","isHost","str","isObject","serialize","pairs","parseString","pair","parseHeader","line","field","val","lines","fields","pop","trim","shift","params","reduce","Response","xhr","text","responseType","responseText","statusText","setStatusProperties","status","header","headers","getAllResponseHeaders","getResponseHeader","setHeaderProperties","parseBody","_query","_header","original","callback","new_err","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","ct","parser","statusCode","statusType","info","ok","clientError","serverError","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","use","timeout","ms","_timeout","clearTimeout","_timer","abort","aborted","unset","getHeader","pass","btoa","_formData","FormData","append","attach","file","filename","_data","_callback","crossDomainError","crossDomain","timeoutError","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","loaded","onprogress","upload","setTimeout","open","contentType","setRequestHeader","fulfill","emitter",12,"Url","slashes","host","port","hostname","hash","search","pathname","href","urlParse","parseQueryString","slashesDenoteHost","util","urlFormat","isString","format","urlResolve","source","relative","urlResolveObject","resolveObject","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","TypeError","queryIndex","splitter","uSplit","slashRegex","rest","simplePath","exec","proto","lowerProto","match","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","p","h","ae","esc","escape","qm","charAt","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute","./util",13,"arg",14,"activate","tab","sendMessage","chrome","tabs","id","createNotification","title","message","pageId","elementId","iconUrl","buttons","notifications","notificationId","element","page","onButtonClicked","addListener","notifId","btnId","notification","findFirst","pageData","Fieldbook","PAGE_SHEET","ELEMENT_SHEET","pageAdded","sheet","urlObj","fullUrl","samePage","domain","meta","highlighted","browserAction","onClicked","../../config","fieldbook-promise"],"mappings":"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","file":"background.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n\tfieldbook:{\n\t  username: 'key-1',\n\t  password: 'VO-_ve-_ve-_vSgrWO-_vWQgbu-_ve-_vQTvv70',\n\t  book: '565c77a80935760300b7201d'\n\t}\n};\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n\tfieldbook:{\n\t  username: 'key-1',\n\t  password: 'VO-_ve-_ve-_vSgrWO-_vWQgbu-_ve-_vQTvv70',\n\t  book: '565c77a80935760300b7201d'\n\t}\n};\n\n},{}],2:[function(require,module,exports){\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n},{}],3:[function(require,module,exports){\nmodule.exports = {\n\terrors: {\n\t\tNO_CONFIG_OBJECT:'No config object',\n\t\tNO_CONFIG_USER: 'No user passed in config object',\n\t\tNO_CONFIG_PASSWORD: 'No password passed in config object',\n\t\tNO_CONFIG_BOOK: 'No book id passed in config object'\t\n\t}\n}\n\n},{}],4:[function(require,module,exports){\nmodule.exports = function(config){\n\n\n\tvar request = require('superagent-promise')(require('superagent'), Promise),\n\turl = require('url'),\n\tconstants = require('./constants');\t\n\n\tvar options;\n\n\t(function(conf){\n\t\tif(!conf) {\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_OBJECT);\n\t\t\treturn;\n\t\t}\n\n\t\tif(!conf.user){\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_USER);\n\t\t\treturn;\n\t\t}\n\n\t\tif(!conf.password){\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_PASSWORD);\n\t\t\treturn;\n\t\t}\n\n\t\tif(!conf.book){\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_BOOK);\n\t\t\treturn;\n\t\t}\n\n\t\toptions = config;\n\t})(config);\n\n\n\tfunction execute(req) {\n\t\treturn req\n\t\t\t.set('accept','application/json')\n\t\t\t.auth(options.user, options.password)\n\t\t\t.end()\n\t\t\t.then(function(response){\n\t\t\t\treturn response.body;\n\t\t\t}, function(errBody){\n\t\t\t\tconsole.log(errBody);\n\t\t\t\treturn Promise.reject(errBody.response.error);\n\t\t\t});\n\t\t\n\t}\t\n\n\tfunction buildApi() {\n\t\tvar path;\n\n\t\tif(!arguments) {\n\t\t\tpath = options.book;\t\t\t\n\t\t} else {\n\t\t\tvar args = Array.prototype.slice.call(arguments); \n\t\t\t//put bookId to beginning of array\n\t\t\targs.unshift(options.book);\n\t\t\tpath = args.join(\"/\");\n\t\t}\n\t\t\n\t\treturn url.resolve(\"https://api.fieldbook.com/v1/\",path);\n\t}\n\n\treturn {\n\t\tgetSheets: function(){\n\t\t\tvar api = buildApi();\n\t\t\treturn execute(request.get(api));\n\t\t},\n\t\t\n\t\tgetSheet: function(sheetId){\n\t\t\tvar api = buildApi(sheetId);\n\t\t\treturn execute(request.get(api));\n\t\t},\n\n\t\tgetRecord: function(sheetId, recordId){\n\t\t\tvar api = buildApi(sheetId, recordId);\n\t\t\treturn execute(request.get(api));\n\t\t},\n\n\t\taddRecord: function(sheetId, data){\n\t\t\tvar api = buildApi(sheetId);\n\t\t\treturn execute(request\n\t\t\t\t\t\t\t.post(api)\n\t\t\t\t\t\t\t.send(data))\n\t\t},\n\n\t\tupdateRecord: function(sheetId, recordId, data){\n\t\t\tvar api = buildApi(sheetId, recordId);\n\t\t\treturn execute(request\n\t\t\t\t\t\t\t.patch(api)\n\t\t\t\t\t\t\t.send(data));\n\t\t},\n\n\t\tdeleteRecord: function(sheetId, recordId){\n\t\t\tvar api = buildApi(sheetId, recordId);\n\t\t\treturn execute(request.del(api));\n\t\t}\t\n\t}\n\n\n}\n\n},{\"./constants\":3,\"superagent\":11,\"superagent-promise\":10,\"url\":12}],5:[function(require,module,exports){\n(function (global){\n/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],6:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],7:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":6,\"./encode\":7}],9:[function(require,module,exports){\n\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n},{}],10:[function(require,module,exports){\n/**\n * Promise wrapper for superagent\n */\n\nfunction wrap(superagent, Promise) {\n  /**\n   * Request object similar to superagent.Request, but with end() returning\n   * a promise.\n   */\n  function PromiseRequest() {\n    superagent.Request.apply(this, arguments);\n  }\n\n  // Inherit form superagent.Request\n  PromiseRequest.prototype = Object.create(superagent.Request.prototype);\n\n  /** Send request and get a promise that `end` was emitted */\n  PromiseRequest.prototype.end = function(cb) {\n    var _end = superagent.Request.prototype.end;\n    var self = this;\n\n    return new Promise(function(accept, reject) {\n      _end.call(self, function(err, response) {\n        if (cb) {\n          cb(err, response);\n        }\n\n        if (err) {\n          reject(err);\n        } else {\n          accept(response);\n        }\n      });\n    });\n  };\n\n  /** Provide a more promise-y interface */\n  PromiseRequest.prototype.then = function(resolve, reject) {\n    var _end = superagent.Request.prototype.end;\n    var self = this;\n\n    return new Promise(function(accept, reject) {\n      _end.call(self, function(err, response) {\n        if (err) {\n          reject(err);\n        } else {\n          accept(response);\n        }\n      });\n    }).then(resolve, reject);\n  };\n\n  /**\n   * Request builder with same interface as superagent.\n   * It is convenient to import this as `request` in place of superagent.\n   */\n  var request = function(method, url) {\n    return new PromiseRequest(method, url);\n  };\n\n  /** Helper for making an options request */\n  request.options = function(url) {\n    return request('OPTIONS', url);\n  }\n\n  /** Helper for making a head request */\n  request.head = function(url, data) {\n    var req = request('HEAD', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a get request */\n  request.get = function(url, data) {\n    var req = request('GET', url);\n    if (data) {\n      req.query(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a post request */\n  request.post = function(url, data) {\n    var req = request('POST', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a put request */\n  request.put = function(url, data) {\n    var req = request('PUT', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a patch request */\n  request.patch = function(url, data) {\n    var req = request('PATCH', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a delete request */\n  request.del = function(url) {\n    return request('DELETE', url);\n  };\n\n  // Export the request builder\n  return request;\n}\n\nmodule.exports = wrap;\n\n},{}],11:[function(require,module,exports){\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(obj[key]));\n    }\n  }\n  return pairs.join('&');\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Force given parser\n * \n * Sets the body parser no matter type.\n * \n * @param {Function}\n * @api public\n */\n\nResponse.prototype.parse = function(fn){\n  this.parser = fn;\n  return this;\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = this.parser || request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"})\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n  err.crossDomain = true;\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this.getHeader('Content-Type');\n    var serialize = request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n  xhr.send(data);\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nRequest.prototype.then = function (fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.del = function(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n\n},{\"emitter\":2,\"reduce\":9}],12:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n},{\"./util\":13,\"punycode\":5,\"querystring\":8}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n},{}],14:[function(require,module,exports){\n\n\n\nfunction activate(tab){\n\n\tvar Fieldbook = require('fieldbook-promise'),\n\t\turl = require('url'),\n\t\tconfig = require('../../config');\n\n\tvar book = new Fieldbook({\n\t  user: config.fieldbook.username,\n\t  password: config.fieldbook.password,\n\t  book: config.fieldbook.book\n\t});\n\n\tfunction sendMessage(method) {\n\t\treturn new Promise(function(resolve, reject){\n\t\t\tchrome.tabs.sendMessage(tab.id,{method:method},resolve);\n\t\t});\n\t}\n\n\tfunction createNotification(title,message,pageId,elementId){\n\n\t\tvar options = {\n\t\t\ttitle: title,\n\t\t\tmessage: message,\n\t\t\ttype: 'basic',\n\t\t\ticonUrl:'/img/extension-icon.png',\n \t\t};\n\n\t\tif(pageId || elementId) {\n\t\t\toptions.buttons = [{\n\t\t\t\ttitle:'Undo'\n\t\t\t}];\n\t\t}\n\n\t\tvar notifications = {};\n\n\t\tchrome.notifications.create(null,options,function(notificationId){\n\t\t\tnotifications[notificationId] = {\n\t\t\t\telement: elementId,\n\t\t\t\tpage: pageId\t\n\t\t\t}\n\t\t\t\n\t\t\tsetTimeout(function(){\n\t\t\t\tconsole.log('Deleting... (' + notificationId + ')');\n\t\t\t\tdelete notifications[notificationId];\n\t\t\t}, 5000);\n\t\t});\n\n\t\tchrome.notifications.onButtonClicked.addListener(function(notifId,btnId){\n\t\t\tif(btnId === 0) {\n\t\t\t\tvar notification = notifications[notifId];\n\n\t\t\t\tif(!notification){\n\t\t\t\t\treturn;\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tif(notification.page) {\n\t\t\t\t\tbook.deleteRecord('page',notification.page);\t\n\t\t\t\t}\t\n\n\t\t\t\tif(notification.element) {\n\t\t\t\t\tbook.deleteRecord('element', notification.element);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction findFirst(arr, callback){\n\t\tfor(var i = 0; i < arr.length; i++){\n\t\t\tif(callback(arr[i])){\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tvar PAGE_SHEET = 'page';\n\tvar ELEMENT_SHEET = 'element';\n\n\tvar pageData;\n\n\tvar pageAdded = true;\n\tvar pageId = false, \n\t\telementId = false;\n\n\tsendMessage('getPageData').then(function(data){\n\t\tpageData = data;\n\t\treturn book.getSheet(PAGE_SHEET);\n\t}).then(function(sheet){\n\t\tvar urlObj = url.parse(pageData.url);\n\n\t\tvar fullUrl = urlObj.href;\n\n\t\tvar samePage = findFirst(sheet, function(obj){\n\t\t\treturn obj.domain === urlObj.hostname && obj.path === urlObj.path;\n\t\t});\n\n\t\tif(samePage) {\n\t\t\tconsole.log('samepage');\n\t\t\tpageAdded = false;\n\t\t\treturn samePage;\n\t\t}\n\t\tvar page = {\n\t\t\tdomain: urlObj.hostname,\n\t\t\tpath: urlObj.path,\n\t\t\tprotocol: urlObj.protocol,\n\t\t\tmeta: pageData.meta,\n\t\t\ttitle: pageData.title,\n\t\t\turl: fullUrl\n\t\t}\n\t\t\t\n\t\treturn book.addRecord(PAGE_SHEET, page); \n\t}).then(function(page){\n\n\t\tpageId = page.id;\n\n\t\tif(!pageData.element){\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tvar element = pageData.element;\n\t\telement.page = page;\n\n\t\treturn book.addRecord(ELEMENT_SHEET, element);\n\t}).then(function(element){\n\n\t\telementId = element.id;\n\t\t\n\t\tvar title, message;\n\n\t\tif(pageAdded && element){\n\t\t\ttitle = 'New Page & Selection Added';\n\t\t\tmessage = pageData.title + \":\\n\\n\\\"\" + element.highlighted + \"\\\"\";\n\t\t} else if(pageAdded && !element) {\n\t\t\telementId = false;\n\t\t\ttitle = 'New Page Added'\n\t\t\tmessage = pageData.title;\n\t\t} else if(!pageAdded && element) {\n\t\t\tpageId = false;\n\t\t\ttitle = 'New Selection Added'\n\t\t\tmessage = pageData.title + \":\\n\\n\\\"\" + element.highlighted + \"\\\"\";\n\t\t} else if(!pageAdded && !element) {\n\t\t\tpageId = false;\n\t\t\telementId = false;\n\t\t\ttitle = 'Nothing was added'\n\t\t\tmessage = '';\n\t\t} \n\n\t\tcreateNotification(title,message,pageId,elementId);\t\n\t}).catch(function(err){\n\t\tconsole.log(err);\n\t});\n}\n\n\nchrome.browserAction.onClicked.addListener(activate);\nconsole.log('background-script');\n\n},{\"../../config\":1,\"fieldbook-promise\":4,\"url\":12}]},{},[14])\n\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","module.exports = {\n\terrors: {\n\t\tNO_CONFIG_OBJECT:'No config object',\n\t\tNO_CONFIG_USER: 'No user passed in config object',\n\t\tNO_CONFIG_PASSWORD: 'No password passed in config object',\n\t\tNO_CONFIG_BOOK: 'No book id passed in config object'\t\n\t}\n}\n","module.exports = function(config){\n\n\n\tvar request = require('superagent-promise')(require('superagent'), Promise),\n\turl = require('url'),\n\tconstants = require('./constants');\t\n\n\tvar options;\n\n\t(function(conf){\n\t\tif(!conf) {\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_OBJECT);\n\t\t\treturn;\n\t\t}\n\n\t\tif(!conf.user){\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_USER);\n\t\t\treturn;\n\t\t}\n\n\t\tif(!conf.password){\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_PASSWORD);\n\t\t\treturn;\n\t\t}\n\n\t\tif(!conf.book){\n\t\t\tthrow new Error(constants.errors.NO_CONFIG_BOOK);\n\t\t\treturn;\n\t\t}\n\n\t\toptions = config;\n\t})(config);\n\n\n\tfunction execute(req) {\n\t\treturn req\n\t\t\t.set('accept','application/json')\n\t\t\t.auth(options.user, options.password)\n\t\t\t.end()\n\t\t\t.then(function(response){\n\t\t\t\treturn response.body;\n\t\t\t}, function(errBody){\n\t\t\t\tconsole.log(errBody);\n\t\t\t\treturn Promise.reject(errBody.response.error);\n\t\t\t});\n\t\t\n\t}\t\n\n\tfunction buildApi() {\n\t\tvar path;\n\n\t\tif(!arguments) {\n\t\t\tpath = options.book;\t\t\t\n\t\t} else {\n\t\t\tvar args = Array.prototype.slice.call(arguments); \n\t\t\t//put bookId to beginning of array\n\t\t\targs.unshift(options.book);\n\t\t\tpath = args.join(\"/\");\n\t\t}\n\t\t\n\t\treturn url.resolve(\"https://api.fieldbook.com/v1/\",path);\n\t}\n\n\treturn {\n\t\tgetSheets: function(){\n\t\t\tvar api = buildApi();\n\t\t\treturn execute(request.get(api));\n\t\t},\n\t\t\n\t\tgetSheet: function(sheetId){\n\t\t\tvar api = buildApi(sheetId);\n\t\t\treturn execute(request.get(api));\n\t\t},\n\n\t\tgetRecord: function(sheetId, recordId){\n\t\t\tvar api = buildApi(sheetId, recordId);\n\t\t\treturn execute(request.get(api));\n\t\t},\n\n\t\taddRecord: function(sheetId, data){\n\t\t\tvar api = buildApi(sheetId);\n\t\t\treturn execute(request\n\t\t\t\t\t\t\t.post(api)\n\t\t\t\t\t\t\t.send(data))\n\t\t},\n\n\t\tupdateRecord: function(sheetId, recordId, data){\n\t\t\tvar api = buildApi(sheetId, recordId);\n\t\t\treturn execute(request\n\t\t\t\t\t\t\t.patch(api)\n\t\t\t\t\t\t\t.send(data));\n\t\t},\n\n\t\tdeleteRecord: function(sheetId, recordId){\n\t\t\tvar api = buildApi(sheetId, recordId);\n\t\t\treturn execute(request.del(api));\n\t\t}\t\n\t}\n\n\n}\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};","/**\n * Promise wrapper for superagent\n */\n\nfunction wrap(superagent, Promise) {\n  /**\n   * Request object similar to superagent.Request, but with end() returning\n   * a promise.\n   */\n  function PromiseRequest() {\n    superagent.Request.apply(this, arguments);\n  }\n\n  // Inherit form superagent.Request\n  PromiseRequest.prototype = Object.create(superagent.Request.prototype);\n\n  /** Send request and get a promise that `end` was emitted */\n  PromiseRequest.prototype.end = function(cb) {\n    var _end = superagent.Request.prototype.end;\n    var self = this;\n\n    return new Promise(function(accept, reject) {\n      _end.call(self, function(err, response) {\n        if (cb) {\n          cb(err, response);\n        }\n\n        if (err) {\n          reject(err);\n        } else {\n          accept(response);\n        }\n      });\n    });\n  };\n\n  /** Provide a more promise-y interface */\n  PromiseRequest.prototype.then = function(resolve, reject) {\n    var _end = superagent.Request.prototype.end;\n    var self = this;\n\n    return new Promise(function(accept, reject) {\n      _end.call(self, function(err, response) {\n        if (err) {\n          reject(err);\n        } else {\n          accept(response);\n        }\n      });\n    }).then(resolve, reject);\n  };\n\n  /**\n   * Request builder with same interface as superagent.\n   * It is convenient to import this as `request` in place of superagent.\n   */\n  var request = function(method, url) {\n    return new PromiseRequest(method, url);\n  };\n\n  /** Helper for making an options request */\n  request.options = function(url) {\n    return request('OPTIONS', url);\n  }\n\n  /** Helper for making a head request */\n  request.head = function(url, data) {\n    var req = request('HEAD', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a get request */\n  request.get = function(url, data) {\n    var req = request('GET', url);\n    if (data) {\n      req.query(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a post request */\n  request.post = function(url, data) {\n    var req = request('POST', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a put request */\n  request.put = function(url, data) {\n    var req = request('PUT', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a patch request */\n  request.patch = function(url, data) {\n    var req = request('PATCH', url);\n    if (data) {\n      req.send(data);\n    }\n    return req;\n  };\n\n  /** Helper for making a delete request */\n  request.del = function(url) {\n    return request('DELETE', url);\n  };\n\n  // Export the request builder\n  return request;\n}\n\nmodule.exports = wrap;\n","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(obj[key]));\n    }\n  }\n  return pairs.join('&');\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Force given parser\n * \n * Sets the body parser no matter type.\n * \n * @param {Function}\n * @api public\n */\n\nResponse.prototype.parse = function(fn){\n  this.parser = fn;\n  return this;\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = this.parser || request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"})\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n  err.crossDomain = true;\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this.getHeader('Content-Type');\n    var serialize = request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n  xhr.send(data);\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nRequest.prototype.then = function (fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.del = function(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","\n\n\nfunction activate(tab){\n\n\tvar Fieldbook = require('fieldbook-promise'),\n\t\turl = require('url'),\n\t\tconfig = require('../../config');\n\n\tvar book = new Fieldbook({\n\t  user: config.fieldbook.username,\n\t  password: config.fieldbook.password,\n\t  book: config.fieldbook.book\n\t});\n\n\tfunction sendMessage(method) {\n\t\treturn new Promise(function(resolve, reject){\n\t\t\tchrome.tabs.sendMessage(tab.id,{method:method},resolve);\n\t\t});\n\t}\n\n\tfunction createNotification(title,message,pageId,elementId){\n\n\t\tvar options = {\n\t\t\ttitle: title,\n\t\t\tmessage: message,\n\t\t\ttype: 'basic',\n\t\t\ticonUrl:'/img/extension-icon.png',\n \t\t};\n\n\t\tif(pageId || elementId) {\n\t\t\toptions.buttons = [{\n\t\t\t\ttitle:'Undo'\n\t\t\t}];\n\t\t}\n\n\t\tvar notifications = {};\n\n\t\tchrome.notifications.create(null,options,function(notificationId){\n\t\t\tnotifications[notificationId] = {\n\t\t\t\telement: elementId,\n\t\t\t\tpage: pageId\t\n\t\t\t}\n\t\t\t\n\t\t\tsetTimeout(function(){\n\t\t\t\tconsole.log('Deleting... (' + notificationId + ')');\n\t\t\t\tdelete notifications[notificationId];\n\t\t\t}, 5000);\n\t\t});\n\n\t\tchrome.notifications.onButtonClicked.addListener(function(notifId,btnId){\n\t\t\tif(btnId === 0) {\n\t\t\t\tvar notification = notifications[notifId];\n\n\t\t\t\tif(!notification){\n\t\t\t\t\treturn;\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tif(notification.page) {\n\t\t\t\t\tbook.deleteRecord('page',notification.page);\t\n\t\t\t\t}\t\n\n\t\t\t\tif(notification.element) {\n\t\t\t\t\tbook.deleteRecord('element', notification.element);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction findFirst(arr, callback){\n\t\tfor(var i = 0; i < arr.length; i++){\n\t\t\tif(callback(arr[i])){\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tvar PAGE_SHEET = 'page';\n\tvar ELEMENT_SHEET = 'element';\n\n\tvar pageData;\n\n\tvar pageAdded = true;\n\tvar pageId = false, \n\t\telementId = false;\n\n\tsendMessage('getPageData').then(function(data){\n\t\tpageData = data;\n\t\treturn book.getSheet(PAGE_SHEET);\n\t}).then(function(sheet){\n\t\tvar urlObj = url.parse(pageData.url);\n\n\t\tvar fullUrl = urlObj.href;\n\n\t\tvar samePage = findFirst(sheet, function(obj){\n\t\t\treturn obj.domain === urlObj.hostname && obj.path === urlObj.path;\n\t\t});\n\n\t\tif(samePage) {\n\t\t\tconsole.log('samepage');\n\t\t\tpageAdded = false;\n\t\t\treturn samePage;\n\t\t}\n\t\tvar page = {\n\t\t\tdomain: urlObj.hostname,\n\t\t\tpath: urlObj.path,\n\t\t\tprotocol: urlObj.protocol,\n\t\t\tmeta: pageData.meta,\n\t\t\ttitle: pageData.title,\n\t\t\turl: fullUrl\n\t\t}\n\t\t\t\n\t\treturn book.addRecord(PAGE_SHEET, page); \n\t}).then(function(page){\n\n\t\tpageId = page.id;\n\n\t\tif(!pageData.element){\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tvar element = pageData.element;\n\t\telement.page = page;\n\n\t\treturn book.addRecord(ELEMENT_SHEET, element);\n\t}).then(function(element){\n\n\t\telementId = element.id;\n\t\t\n\t\tvar title, message;\n\n\t\tif(pageAdded && element){\n\t\t\ttitle = 'New Page & Selection Added';\n\t\t\tmessage = pageData.title + \":\\n\\n\\\"\" + element.highlighted + \"\\\"\";\n\t\t} else if(pageAdded && !element) {\n\t\t\telementId = false;\n\t\t\ttitle = 'New Page Added'\n\t\t\tmessage = pageData.title;\n\t\t} else if(!pageAdded && element) {\n\t\t\tpageId = false;\n\t\t\ttitle = 'New Selection Added'\n\t\t\tmessage = pageData.title + \":\\n\\n\\\"\" + element.highlighted + \"\\\"\";\n\t\t} else if(!pageAdded && !element) {\n\t\t\tpageId = false;\n\t\t\telementId = false;\n\t\t\ttitle = 'Nothing was added'\n\t\t\tmessage = '';\n\t\t} \n\n\t\tcreateNotification(title,message,pageId,elementId);\t\n\t}).catch(function(err){\n\t\tconsole.log(err);\n\t});\n}\n\n\nchrome.browserAction.onClicked.addListener(activate);\nconsole.log('background-script');\n"],"sourceRoot":"/source/"}